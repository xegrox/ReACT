@using Microsoft.AspNetCore.Identity
@using ReACT.Models
@inject UserManager<ApplicationUser> UserManager
@{
    var points = (await UserManager.GetUserAsync(User)).Total_Points;
    Layout = "_SideNavbarLayout";
    ViewData["navbar_items"] = new List<NavbarLayoutItem>
    {
        new("Points & Rewards", "squares-four", "Dashboard"),
        new("Forum", "chats", "Forum"),
        new("Recycle", "recycle", "Recycle"),
        new("Forest", "tree-evergreen", "Forest")
    };
}

<div class="flex absolute top-0 right-0 p-5 gap-5 z-10">
    <label class="btn btn-sm btn-primary rounded-full gap-1.5" for="redeem-modal-toggle">
        <i class="ph-gift-bold"></i>
        Redeem
    </label>
    <a href="@Url.Page("getMorePoints")">
        <div class="flex h-8 px-3 rounded-full border-2 items-center gap-1.5 min-w-[8rem] bg-base-100">
            <i class="ph-moon"></i>
            <p class="flex-1" x-data="{
                points: @points,
                async updatePoints() {
                    let newPoints = await $fetchjson('@Url.Action("Points", "UserDetails")')
                    this.$numRush('points', newPoints, 1000)
                }
            }" x-text="points" x-on:update-points.document="updatePoints()"></p>
            <i class="ph-plus-circle text-sm"></i>
        </div>
    </a>
</div>

<div x-data>
    <input type="checkbox" id="redeem-modal-toggle" class="modal-toggle" x-on:change.once="$dispatch('showRedeemModal')"/>
    <label for="redeem-modal-toggle" class="modal cursor-pointer" x-ref="modalRedeem">
        <label class="modal-box relative w-[80vw] max-w-none h-[85vh]" for="">
            <label for="redeem-modal-toggle" class="btn btn-sm btn-circle absolute right-2 top-2">
                <i class="ph-x"></i>
            </label>
            <div hx-get="@Url.ActionLink("ModalRootFrame", "Redeem")" hx-trigger="showRedeemModal from:#redeem-modal-toggle" hx-swap="outerHTML"></div>
        </label>
    </label>    
</div>